{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sc",
				"script"
			],
			[
				"cdnS",
				"cdnScript"
			],
			[
				"cdn",
				"cdnScripts"
			],
			[
				"scri",
				"scripts"
			],
			[
				"cd",
				"cdnScripts"
			],
			[
				"scr",
				"scripts"
			],
			[
				"ava",
				"avatarUploaded"
			],
			[
				"electio",
				"electionClosed"
			],
			[
				"election",
				"electionID"
			],
			[
				"GetE",
				"GetElectionCollege"
			],
			[
				"Avatar",
				"avatarUploaded"
			],
			[
				"total",
				"totalVotes"
			],
			[
				"json_",
				"json_encode"
			],
			[
				"show",
				"show_error"
			],
			[
				"user",
				"userEmail"
			],
			[
				"ion",
				"ion_auth"
			],
			[
				"number",
				"numberInactiveElections"
			],
			[
				"actio",
				"actionButtons"
			],
			[
				"num",
				"num_rows"
			],
			[
				"previous",
				"previousCandidate"
			],
			[
				"Remove",
				"RemoveCandidate"
			],
			[
				"prev",
				"previousCandidate"
			],
			[
				"Update",
				"UpdateElection"
			],
			[
				"ele",
				"election"
			],
			[
				"sele",
				"selectedCanddiate"
			],
			[
				"GetElec",
				"GetElectionCandidates"
			],
			[
				"end",
				"endforeach"
			],
			[
				"can",
				"candidate"
			],
			[
				"html",
				"htmlspecialchars"
			],
			[
				"cand",
				"candidate"
			],
			[
				"sidebar_",
				"sidebar_admin"
			],
			[
				"navigation",
				"navigation_admin"
			],
			[
				"elect",
				"electionID"
			],
			[
				"candida",
				"candidates"
			],
			[
				"candidate",
				"candidateID"
			],
			[
				"candid",
				"candidateID"
			],
			[
				"current",
				"currentCollege"
			],
			[
				"row",
				"row_array"
			],
			[
				"notif",
				"notifications"
			],
			[
				"noti",
				"notification"
			],
			[
				"result",
				"resultCandidates"
			],
			[
				"not",
				"notification"
			],
			[
				"Ac",
				"AcceptElectionNotification"
			],
			[
				"candiate",
				"candidateLink"
			],
			[
				"admin",
				"admin_notifications"
			],
			[
				"active",
				"activeElection"
			],
			[
				"print",
				"print_r"
			],
			[
				"acti",
				"activeElection"
			],
			[
				"GetNoti",
				"GetNotificationsByType"
			],
			[
				"Noti",
				"notifications"
			],
			[
				"Extend",
				"ExtendElection"
			],
			[
				"elec",
				"electionID"
			],
			[
				"UpdateE",
				"UpdateElectionVotes"
			],
			[
				"numberA",
				"numberActiveElections"
			],
			[
				"form",
				"form_validation"
			],
			[
				"userCo",
				"userColleges"
			],
			[
				"for",
				"foreach	foreach â€¦"
			],
			[
				"date_defa",
				"date_default_timezone_set"
			],
			[
				"activ",
				"activeElections"
			],
			[
				"electi",
				"elections_model"
			]
		]
	},
	"buffers":
	[
		{
			"file": "application/controllers/user.php",
			"settings":
			{
				"buffer_size": 22520,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/admin.php",
			"settings":
			{
				"buffer_size": 31669,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/templates/scripts_custom.php",
			"settings":
			{
				"buffer_size": 459,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/pages.php",
			"settings":
			{
				"buffer_size": 1820,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/pages/edit-profile.php",
			"settings":
			{
				"buffer_size": 7321,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/elections.php",
			"settings":
			{
				"buffer_size": 9282,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/notifications.php",
			"settings":
			{
				"buffer_size": 3574,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\nclass Notification_Model extends CI_Model\n{\n	// constructor - sets up the model, load the database, and libraries\n    public function __construct()\n    {\n        $this->load->database();\n        $this->load->model('ion_auth_model');\n        $this->load->library('ion_auth');\n    }\n\n    // GetNotifications - Returns all the notifications\n	public function GetNotifications()\n	{\n		// return all elections\n		$query = $this->db->get('admin_notifications');\n		// returns the resulting array of the the elections is found\n		return $query->result_array();\n	}\n\n	// GetElectionNotifications - Returns all the notifications for elections\n	public function GetElectionNotifications()\n	{\n		$query = $this->db->query('SELECT admin_notifications.id, colleges.description, first_name, last_name, election_name \n								FROM users, colleges, users_colleges, admin_notifications, election WHERE type=\"Vote\" \n								AND users.id=admin_notifications.sender_id \n								AND admin_notifications.election_id=election.id \n								AND users_colleges.college_id=colleges.id \n								AND users_colleges.user_id=admin_notifications.sender_id');\n		return $query->result_array();\n	}\n\n	// GetElectionNotifications - Returns all the notifications for elections\n	public function GetCandidateNotifications()\n	{\n		$query = $this->db->query('SELECT admin_notifications.id, colleges.description, first_name, last_name\n								FROM users, colleges, users_colleges, admin_notifications WHERE type=\"Candidate\" \n								AND users.id=admin_notifications.sender_id \n								AND users_colleges.college_id=colleges.id \n								AND users_colleges.user_id=admin_notifications.sender_id');\n		return $query->result_array();\n	}\n\n	// IsElectionNotificationSent - checks to see if the logged in user has sent a notification for that election\n	// Returns - True if it has been sent, false if it has not been sent\n	public function IsElectionNotificationSent($electionID)\n	{\n		$userID = $this->ion_auth->user()->row()->id;\n		$query = $this->db->select('id')->from('admin_notifications')->where('election_id', $electionID)->where('sender_id', $userID)->get();\n		$result = $query->num_rows();\n\n		if($result >= 1)\n		{\n			return true;\n		}\n		else\n		{\n			return false;\n		}\n	}\n\n	// SendElectionNotification - Adds an election notification to the admins for the current user\n	// electionID - the ID for the election they are wanting to vote on\n	public function SendElectionNotification($electionID)\n	{\n		$userID = $this->ion_auth->user()->row()->id;\n\n		$data = array('sender_id' => $userID,\n					  'type' => 'Vote',\n					  'election_id' => $electionID);\n		$this->db->insert('admin_notifications', $data);\n\n		$this->ion_auth_model->set_message('notification_approval_sent');\n	}\n\n	// SendCandidateNotification - Adds an candidate request notification to the admins for the current user\n	public function SendCandidateNotification()\n	{\n		// the current logged on user is the user sending the request\n		$userID = $this->ion_auth->user()->row()->id;\n\n		// checks to see if we have this users approval request, if so, we do nothing.\n		$query = $this->db->get_where('admin_notifications', array('sender_id' => $userID,\n																   'type' => 'Candidate'));\n		$result = $query->num_rows();\n		if($result > 0)\n		{\n			// we have the request already, just return and do nothing\n			$this->ion_auth_model->set_message('notification_approval_notsent');\n			return;\n		}\n\n		$data = array('sender_id' => $userID,\n					  'type' => 'Candidate');\n		$this->db->insert('admin_notifications', $data);\n		$this->ion_auth_model->set_message('notification_approval_sent');\n	}\n\n	// AcceptElectionRequest - allows a user to vote on an election and deletes their notification from the table\n	// notificationID - the notification that we are accepting and deleting from the table.\n	public function AcceptElectionRequest($notificationID)\n	{\n		$this->load->library('email');\n\n		$query = $this->db->get_where('admin_notifications', array('id' => $notificationID));\n		$result = $query->row_array();\n\n		// store who sender and the election they will vote on\n		$sender = $result['sender_id'];\n		$election = $result['election_id'];\n\n		// adds the user to the voters table\n		$data = array('user_id' => $sender,\n					  'election_id' => $election);\n		$this->db->insert('voters', $data);\n\n		$userEmail = $this->ion_auth->user($sender)->row()->email;\n\n		$this->email->from('UNTVote@gmail.com', 'UNTVote');\n		$this->email->to($userEmail);\n		$this->email->subject('UNTVote: Election Approval Request');\n		$this->email->message('We are sending you this email to let you know that you have been \n								approved to vote in an election you requested.');\n		$this->email->send();\n\n		// deletes the notification from the table\n		$this->db->delete('admin_notifications', array('id' => $notificationID));\n\n		// TODO: SEND EMAIL TO THE USER HERE\n	}\n\n	public function AcceptCandidateRequest($notificationID)\n	{\n		$this->load->helper('url');\n\n		$query = $this->db->get_where('admin_notifications', array('id' => $notificationID));\n		$result = $query->row_array();\n\n		// store the sender and add the user to the candidates group\n		$sender = $result['sender_id'];\n		$this->ion_auth->add_to_group('3', $sender);\n\n		$userName = $this->ion_auth->user($sender)->row()->first_name;\n		$userEmail = $this->ion_auth->user($sender)->row()->email;\n		$profileURL = anchor('user/edit_user/' . $sender . '#candidate', \"HERE\");\n		$emailMessage = 'Congratulations <strong>' . $userName . '</strong>, you have been approved to be a candidate!<br>\n						You may click '. $profileURL . ' to edit your profile.  You can click the Candidate Tab to edit your candidate information!';\n\n		$this->email->from('UNTVote@gmail.com', 'UNTVote');\n		$this->email->to($userEmail);\n		$this->email->subject('UNTVote: Candidate Approval Request');\n		$this->email->message($emailMessage);\n		$this->email->send();\n\n		// deletes the notification from the table\n		$this->db->delete('admin_notifications', array('id' => $notificationID));\n\n		// TODO: SEND EMAIL TO THE USER HERE\n	}\n\n	// RejectRequest - The admin rejects the users reques to be a candidate or vote on an election\n	// notificationID - the notification we need to remove\n	public function RejectRequest($notificationID)\n	{\n		$this->db->delete('admin_notifications', array('id' => $notificationID));\n	}\n}",
			"file": "application/models/notification_model.php",
			"file_size": 6638,
			"file_write_time": 130605178947604134,
			"settings":
			{
				"buffer_size": 6388,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/user/user-elections-details.php",
			"settings":
			{
				"buffer_size": 3784,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/user/user-dashboard.php",
			"settings":
			{
				"buffer_size": 5393,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/user/user-elections-browse.php",
			"settings":
			{
				"buffer_size": 5637,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/xampp/htdocs/UNTVote",
		"/C/xampp/htdocs/UNTVote/application",
		"/C/xampp/htdocs/UNTVote/application/controllers",
		"/C/xampp/htdocs/UNTVote/application/models",
		"/C/xampp/htdocs/UNTVote/application/views",
		"/C/xampp/htdocs/UNTVote/application/views/pages",
		"/C/xampp/htdocs/UNTVote/application/views/templates",
		"/C/xampp/htdocs/UNTVote/application/views/user",
		"/C/xampp/htdocs/UNTVote/assets"
	],
	"file_history":
	[
		"/C/xampp/htdocs/UNTVote/application/controllers/index.html",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-users-manage.php",
		"/C/xampp/htdocs/UNTVote/application/models/ion_auth_model.php",
		"/C/xampp/htdocs/UNTVote/application/libraries/Ion_auth.php",
		"/C/xampp/htdocs/UNTVote/application/views/user/login.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-users-edit.html",
		"/C/xampp/htdocs/UNTVote/application/views/templates/navigation_user.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/scripts_main.php",
		"/C/xampp/htdocs/UNTVote/application/config/ion_auth.php",
		"/C/xampp/htdocs/UNTVote/application/models/election_model.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-users-approvals.php",
		"/C/xampp/htdocs/UNTVote/application/controllers/elections.php",
		"/C/xampp/htdocs/UNTVote/application/views/user/user-elections-details.php",
		"/C/xampp/htdocs/UNTVote/application/controllers/candidates.php",
		"/C/xampp/htdocs/UNTVote/application/models/college_model.php",
		"/C/xampp/htdocs/UNTVote/application/views/candidate/user-candidate-browse.php",
		"/C/xampp/htdocs/UNTVote/application/controllers/user.php",
		"/C/xampp/htdocs/UNTVote/application/views/pages/edit-profile.php",
		"/C/xampp/htdocs/UNTVote/application/controllers/admin.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-dashboard.php",
		"/C/xampp/htdocs/UNTVote/application/views/user/user-dashboard.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/navigation_admin.php",
		"/C/xampp/htdocs/UNTVote/application/config/asset.php",
		"/C/xampp/htdocs/UNTVote/application/views/candidate/user-candidate-info.php",
		"/C/xampp/htdocs/UNTVote/application/logs/index.html",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-users-manage.html",
		"/C/xampp/htdocs/UNTVote/application/views/user/user-elections-browse.php",
		"/C/xampp/htdocs/UNTVote/application/views/user/user-election-results.html",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-elections-manage.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/sidebar_user.php",
		"/C/xampp/htdocs/UNTVote/application/models/user_model.php",
		"/C/xampp/htdocs/UNTVote/application/models/notification_model.php",
		"/C/xampp/htdocs/UNTVote/assets/js/admin-elections-manage.js",
		"/C/xampp/htdocs/UNTVote/application/views/auth/email/forgot_password.tpl.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-edit-election.html",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-edit-election.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/scripts_custom.php",
		"/C/xampp/htdocs/UNTVote/application/models/candidate_model.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-create-election.php",
		"/C/xampp/htdocs/UNTVote/application/language/english/ion_auth_lang.php",
		"/C/xampp/htdocs/UNTVote/application/config/routes.php",
		"/C/xampp/htdocs/UNTVote/application/views/candidate/candidate-view.php",
		"/C/xampp/htdocs/UNTVote/application/views/elections/index.php",
		"/C/xampp/htdocs/UNTVote/application/controllers/notifications.php",
		"/C/xampp/htdocs/UNTVote/application/views/elections/view_election.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/header_user.php",
		"/C/xampp/htdocs/UNTVote/application/views/notifications/index.php",
		"/C/xampp/htdocs/UNTVote/application/config/profiler.php",
		"/C/xampp/htdocs/UNTVote/application/views/user/user-candidate-browse.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/manage_users.php",
		"/C/xampp/htdocs/UNTVote/application/views/pages/home.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/edit_user.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/sidebar_admin.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/admin_navigation.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-create-election.html",
		"/C/xampp/htdocs/UNTVote/application/views/pages/edit-profile.html",
		"/C/xampp/htdocs/UNTVote/application/views/pages/terms-of-service.php",
		"/C/xampp/htdocs/UNTVote/application/views/elections/create_election.php",
		"/C/xampp/htdocs/UNTVote/application/views/user/register.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/header_login.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/header_create_election.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/header_create_election",
		"/C/xampp/htdocs/UNTVote/assets/js/admin-elections.php",
		"/C/xampp/htdocs/UNTVote/application/views/templates/header.php",
		"/C/xampp/htdocs/UNTVote/application/views/admin/admin-election-test.html",
		"/C/xampp/htdocs/UNTVote/application/views/user/user_homepage.php",
		"/C/xampp/htdocs/UNTVote/application/views/user/reset-password.php",
		"/C/Users/twigman08/AppData/Roaming/Sublime Text 3/Packages/User/Plain text.sublime-settings"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"login",
			"register",
			"email_check",
			"set_message",
			"activate_successful",
			"set_message",
			"_render_page",
			"']?>\">\n",
			">\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "application/controllers/user.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22520,
						"regions":
						{
						},
						"selection":
						[
							[
								19805,
								19704
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6090.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "application/controllers/admin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31669,
						"regions":
						{
						},
						"selection":
						[
							[
								30009,
								30062
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10290.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "application/views/templates/scripts_custom.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 459,
						"regions":
						{
						},
						"selection":
						[
							[
								459,
								459
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "application/controllers/pages.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1820,
						"regions":
						{
						},
						"selection":
						[
							[
								1235,
								1235
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "application/views/pages/edit-profile.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7321,
						"regions":
						{
						},
						"selection":
						[
							[
								5696,
								5654
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 770.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "application/controllers/elections.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9282,
						"regions":
						{
						},
						"selection":
						[
							[
								721,
								721
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "application/controllers/notifications.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3574,
						"regions":
						{
						},
						"selection":
						[
							[
								1260,
								1260
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 280.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "application/models/notification_model.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6388,
						"regions":
						{
						},
						"selection":
						[
							[
								2564,
								2564
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 560.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "application/views/user/user-elections-details.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3784,
						"regions":
						{
						},
						"selection":
						[
							[
								337,
								337
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "application/views/user/user-dashboard.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5393,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								236
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "application/views/user/user-elections-browse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5637,
						"regions":
						{
						},
						"selection":
						[
							[
								244,
								244
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "UNTVote.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
